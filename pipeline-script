node {
    
    stage("Git Clone"){
        
        git credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/slegah/spring-boot-mongo-docker.git'
    }
     stage("Maven Clean Build"){
        def mavenHome = tool name: "Maven-3.6.3", type: "maven"
        def mavenCMD = "${mavenHome}/bin/mvn "
        sh "${mavenCMD} clean package"
     }
    stage("Build Docker Image"){
        sh "docker build -t legah2045/spring-boot-mongo ."
    }
     stage("Docker Push"){
       withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS3')]) {
        sh "docker login -u legah2045 -p ${DOCKER_HUB_CREDENTIALS3}"
    }
        sh "docker push legah2045/spring-boot-mongo"
    }
	 stage('Manual Approval'){
	     echo 'Hi, this is Winifred from Rogers Digital Team'
		 input('Do you want to proceed?')
	}
    stage("Deploy Application in labs Cluster"){
        kubernetesDeploy(
            configs: 'springBootMongo.yml',
            kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG1',
            enableConfigSubstitution: true
        )
    }
}
